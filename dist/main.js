(()=>{"use strict";var e={208:(e,t,n)=>{n.d(t,{A:()=>a});var o=n(354),r=n.n(o),i=n(314),d=n.n(i)()(r());d.push([e.id,':root {\n    margin: 0;\n    padding: 0;\n    font-family: "Poppins", sans-serif;\n    font-size: 16px;\n}\n\n\nbody {\n    height: 100vh;\n    margin: 0;\n    box-sizing: border-box;\n}\n\n.container {\n    display: grid;\n    grid-template-columns: minmax(150px, 250px) 3fr;\n    grid-template-rows: 1fr auto;\n    height: 100%;\n\n}\n\n.todo-adder, .project-adder {\n    background-color: #5b21b6;\n    padding: 0.5rem;\n    color: white;\n    font-weight: 550;\n}\n\n.todo-adder {\n    grid-column: 1/2;\n    grid-row: 1/2;\n    \n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\nform.todo-form {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\nform.todo-form > div { /*select all divs under the form*/\n    display: flex;\n    flex-direction: column;\n    gap: 0.2rem;\n}\n\n.todo-form .radio-option {\n    display: flex;\n    gap: 0.4rem;\n    font-weight: 500;\n}\n\n.todo-form input[type="text"], textarea, input[type="date"], select {\n    border-radius: 5px;\n    border: none;\n    padding: 0.2rem;\n}\n\nform button {\n    border-radius: 1rem;\n    border: solid white 0.1rem;\n    background-color: #5b21b6;\n    color: white;\n    padding: 0.1rem;\n}\n\n.form-title {\n    font-size: 1.2rem;\n}\n\n.project-adder {\n    grid-column: 1/2;\n    grid-row: 2/3;\n}\n\n#project-container {\n    grid-column: 2/3;\n    grid-row: 1/3;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem; /*might want to remove later*/\n    padding: 0.5rem;\n    background-color: #ddd6fe;\n    overflow: auto;\n    \n}\n.project {\n    background-color: #ede9fe;\n    border-radius: 10px;\n    padding: 1rem;\n\n}\n\n.project-title {\n    font-size: 1.2rem;\n    font-weight: 600;\n}\n\n.fa-solid.fa-trash.project-delete {\n    margin-left: 0.5rem;\n}\n\n.todo-card-container {\n    display: flex;\n    align-items: center;\n    justify-content: start;\n    gap: 1rem;\n    overflow: auto;\n    padding: 1rem;\n    flex-wrap: wrap;\n\n}\n\n.todo-card {\n    background-color: white;\n    padding: 1rem;\n    border-radius: 10px;\n    overflow: auto;\n    height: 15rem;\n    max-width: 15rem;\n    min-width: 15rem;\n    display: flex;\n    flex-direction: column;\n    font-size: 0.8rem;\n    gap: 0.1rem;\n}\n\n.fa-solid.fa-trash.todo-delete {\n    margin-top: auto;\n    align-self: flex-end;\n    font-size: 1.1rem;\n    padding-top: 0.5rem;\n}\n\n.todo-card-title {\n    font-weight: 600;\n    font-size: 1rem;\n}\n\n.todo-description-title {\n    font-weight: 600;\n}\n\n.todo-description {\n    overflow: auto;\n}\n\n.todo-card-date, .card-priority {\n    color: grey;\n}\n\n\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,kCAAkC;IAClC,eAAe;AACnB;;;AAGA;IACI,aAAa;IACb,SAAS;IACT,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,+CAA+C;IAC/C,4BAA4B;IAC5B,YAAY;;AAEhB;;AAEA;IACI,yBAAyB;IACzB,eAAe;IACf,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,aAAa;;IAEb,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA,uBAAuB,iCAAiC;IACpD,aAAa;IACb,sBAAsB;IACtB,WAAW;AACf;;AAEA;IACI,aAAa;IACb,WAAW;IACX,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,mBAAmB;IACnB,0BAA0B;IAC1B,yBAAyB;IACzB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,SAAS,EAAE,6BAA6B;IACxC,eAAe;IACf,yBAAyB;IACzB,cAAc;;AAElB;AACA;IACI,yBAAyB;IACzB,mBAAmB;IACnB,aAAa;;AAEjB;;AAEA;IACI,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,sBAAsB;IACtB,SAAS;IACT,cAAc;IACd,aAAa;IACb,eAAe;;AAEnB;;AAEA;IACI,uBAAuB;IACvB,aAAa;IACb,mBAAmB;IACnB,cAAc;IACd,aAAa;IACb,gBAAgB;IAChB,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,iBAAiB;IACjB,WAAW;AACf;;AAEA;IACI,gBAAgB;IAChB,oBAAoB;IACpB,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,WAAW;AACf",sourcesContent:[':root {\n    margin: 0;\n    padding: 0;\n    font-family: "Poppins", sans-serif;\n    font-size: 16px;\n}\n\n\nbody {\n    height: 100vh;\n    margin: 0;\n    box-sizing: border-box;\n}\n\n.container {\n    display: grid;\n    grid-template-columns: minmax(150px, 250px) 3fr;\n    grid-template-rows: 1fr auto;\n    height: 100%;\n\n}\n\n.todo-adder, .project-adder {\n    background-color: #5b21b6;\n    padding: 0.5rem;\n    color: white;\n    font-weight: 550;\n}\n\n.todo-adder {\n    grid-column: 1/2;\n    grid-row: 1/2;\n    \n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\nform.todo-form {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\nform.todo-form > div { /*select all divs under the form*/\n    display: flex;\n    flex-direction: column;\n    gap: 0.2rem;\n}\n\n.todo-form .radio-option {\n    display: flex;\n    gap: 0.4rem;\n    font-weight: 500;\n}\n\n.todo-form input[type="text"], textarea, input[type="date"], select {\n    border-radius: 5px;\n    border: none;\n    padding: 0.2rem;\n}\n\nform button {\n    border-radius: 1rem;\n    border: solid white 0.1rem;\n    background-color: #5b21b6;\n    color: white;\n    padding: 0.1rem;\n}\n\n.form-title {\n    font-size: 1.2rem;\n}\n\n.project-adder {\n    grid-column: 1/2;\n    grid-row: 2/3;\n}\n\n#project-container {\n    grid-column: 2/3;\n    grid-row: 1/3;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem; /*might want to remove later*/\n    padding: 0.5rem;\n    background-color: #ddd6fe;\n    overflow: auto;\n    \n}\n.project {\n    background-color: #ede9fe;\n    border-radius: 10px;\n    padding: 1rem;\n\n}\n\n.project-title {\n    font-size: 1.2rem;\n    font-weight: 600;\n}\n\n.fa-solid.fa-trash.project-delete {\n    margin-left: 0.5rem;\n}\n\n.todo-card-container {\n    display: flex;\n    align-items: center;\n    justify-content: start;\n    gap: 1rem;\n    overflow: auto;\n    padding: 1rem;\n    flex-wrap: wrap;\n\n}\n\n.todo-card {\n    background-color: white;\n    padding: 1rem;\n    border-radius: 10px;\n    overflow: auto;\n    height: 15rem;\n    max-width: 15rem;\n    min-width: 15rem;\n    display: flex;\n    flex-direction: column;\n    font-size: 0.8rem;\n    gap: 0.1rem;\n}\n\n.fa-solid.fa-trash.todo-delete {\n    margin-top: auto;\n    align-self: flex-end;\n    font-size: 1.1rem;\n    padding-top: 0.5rem;\n}\n\n.todo-card-title {\n    font-weight: 600;\n    font-size: 1rem;\n}\n\n.todo-description-title {\n    font-weight: 600;\n}\n\n.todo-description {\n    overflow: auto;\n}\n\n.todo-card-date, .card-priority {\n    color: grey;\n}\n\n\n'],sourceRoot:""}]);const a=d},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var d={};if(o)for(var a=0;a<this.length;a++){var A=this[a][0];null!=A&&(d[A]=!0)}for(var c=0;c<e.length;c++){var s=[].concat(e[c]);o&&d[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),t.push(s))}},t}},354:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},72:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},d=[],a=0;a<e.length;a++){var A=e[a],c=o.base?A[0]+o.base:A[0],s=i[c]||0,l="".concat(c," ").concat(s);i[c]=s+1;var u=n(l),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)t[u].references++,t[u].updater(p);else{var m=r(p,o);o.byIndex=a,t.splice(a,0,{identifier:l,updater:m,references:1})}d.push(l)}return d}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var d=0;d<i.length;d++){var a=n(i[d]);t[a].references--}for(var A=o(e,r),c=0;c<i.length;c++){var s=n(i[c]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}i=A}}},659:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(72),t=n.n(e),o=n(825),r=n.n(o),i=n(659),d=n.n(i),a=n(56),A=n.n(a),c=n(540),s=n.n(c),l=n(113),u=n.n(l),p=n(208),m={};m.styleTagTransform=u(),m.setAttributes=A(),m.insert=d().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=s(),t()(p.A,m),p.A&&p.A.locals&&p.A.locals;class f{title;todoList;constructor(e){this.title=e,this.todoList=[]}addTodo(e){this.todoList.push(e)}deleteTodo(e){this.todoList.splice(e,1)}getTodo(e){return this.todoList[e]}getNumberOfTodos(){return this.todoList.length}}class g{projectList;constructor(){this.projectList=[]}addProject(e){this.projectList.push(e)}deleteProject(e){this.projectList.splice(e,1)}getProject(e){return this.projectList[e]}getNumberOfProjects(){return this.projectList.length}}class C{title;description;dueDate;priority;constructor(e,t,n,o){this.title=e,this.description=t,this.dueDate=n,this.priority=o}toString(){return`Title: ${this.title}, Description: ${this.description}, Due date: ${this.dueDate}, Priority: ${this.priority}`}}let B=new class{constructor(){this.projectManager=new g}setAddProjectButtion(){let e=document.querySelector(".project-form"),t=document.querySelector("#project-form-title");e.addEventListener("submit",(e=>{e.preventDefault(),function(e,t){t.addProject(e),function(e,t){let n=document.querySelector("#projects"),o=document.createElement("option");o.setAttribute("value",e.title),o.setAttribute("data-index",t),o.textContent=e.title,n.appendChild(o)}(e,t.getNumberOfProjects()-1);let n=document.querySelector("#project-container"),o=document.createElement("div");o.classList.add("project"),o.setAttribute("data-index",t.getNumberOfProjects()-1);let r=document.createElement("div");r.classList.add("project-title"),r.textContent=e.title;let i=document.createElement("i");i.setAttribute("class","fa-solid fa-trash project-delete");let d=document.createElement("div");d.classList.add("todo-card-container"),i.addEventListener("click",(()=>{var e;o.remove(),t.deleteProject(Number(o.getAttribute("data-index"))),e=o.getAttribute("data-index"),document.querySelector(`option[data-index="${e}"]`).remove(),function(){let e=document.querySelectorAll(".project"),t=document.querySelectorAll("option");for(let n=0;n<e.length;n++)e[n].setAttribute("data-index",n),t[n].setAttribute("data-index",n)}()})),r.appendChild(i),o.appendChild(r),o.appendChild(d),n.appendChild(o)}(new f(t.value),this.projectManager)}))}setAddTodoButton(){let e=document.querySelector(".todo-form"),t=document.querySelector("#todo-form-title"),n=document.querySelector("#todo-form-description"),o=document.querySelector("#todo-form-due-date");e.addEventListener("submit",(e=>{e.preventDefault(),document.querySelector("#projects option:checked");let r=Number(document.querySelector("#projects option:checked").getAttribute("data-index")),i=document.querySelector('input[type="radio"]:checked');!function(e,t,n){n.getProject(t).addTodo(e);let o=document.createElement("div");o.classList.add("todo-card"),o.setAttribute("data-index",n.getProject(t).getNumberOfTodos()-1);let r=document.createElement("div");r.classList.add("todo-card-title"),r.textContent=e.title;let i=document.createElement("div");i.classList.add("todo-card-date"),i.textContent=e.dueDate;let d=document.createElement("div");d.classList.add("card-priority"),d.textContent=`Priority: ${e.priority}`;let a=document.createElement("div");a.classList.add("todo-description-title"),a.textContent="Description";let A=document.createElement("div");A.classList.add("todo-description"),A.textContent=e.description;let c=document.createElement("i");c.setAttribute("class","fa-solid fa-trash todo-delete"),c.addEventListener("click",(()=>{let e=o.closest(".project");o.remove(),n.getProject(Number(e.getAttribute("data-index"))).deleteTodo(Number(o.getAttribute("data-index"))),function(e){let t=document.querySelectorAll(`.project[data-index="${e}"] .todo-card`),n=0;t.forEach((e=>{e.setAttribute("data-index",n),n++}))}(Number(e.getAttribute("data-index")))}));let s=document.querySelector(`.project[data-index="${t}"] .todo-card-container`);o.appendChild(r),o.appendChild(i),o.appendChild(d),o.appendChild(a),o.appendChild(A),o.appendChild(c),s.appendChild(o)}(new C(t.value,n.value,o.value.replace(/-/g,"/"),i.value),r,this.projectManager)}))}};B.setAddProjectButtion(),B.setAddTodoButton()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SyxDQUFrQnpCLE9BQU81QixFQUFRNkIsYUFBYSxlQUFlLElBSWpFLElBQUl5QixFQUFnQnBILFNBQVNDLGNBQWMsd0JBQXdCcUcsNEJBRW5FRyxFQUFTaEcsWUFBWWlHLEdBQ3JCRCxFQUFTaEcsWUFBWWtHLEdBQ3JCRixFQUFTaEcsWUFBWW1HLEdBQ3JCSCxFQUFTaEcsWUFBWW9HLEdBQ3JCSixFQUFTaEcsWUFBWXFHLEdBQ3JCTCxFQUFTaEcsWUFBWStFLEdBQ3JCNEIsRUFBYzNHLFlBQVlnRyxFQUM5QixDRDNFZ0JZLENBRGMsSUFBSW5ELEVBQUtpQyxFQUFlSCxNQUFPSSxFQUFjSixNQUFPSyxFQUFjTCxNQUFNc0IsUUFBUSxLQUFLLEtBQU1mLEVBQXdCUCxPQUNwR00sRUFBY3BLLEtBQUtxSSxlQUFjLEdBRXRFLEdEdkNSRCxFQUFZRSx1QkFDWkYsRUFBWTJCLGtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3N0eWxlLmNzcz83MTYzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9wcm9qZWN0LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9wcm9qZWN0bWFuYWdlci5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvdG9kby5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2NvbnRyb2xsZXIuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3VzZXJpbnRlcmZhY2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYDpyb290IHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBmb250LWZhbWlseTogXCJQb3BwaW5zXCIsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAxNnB4O1xufVxuXG5cbmJvZHkge1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgbWFyZ2luOiAwO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi5jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBtaW5tYXgoMTUwcHgsIDI1MHB4KSAzZnI7XG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnIgYXV0bztcbiAgICBoZWlnaHQ6IDEwMCU7XG5cbn1cblxuLnRvZG8tYWRkZXIsIC5wcm9qZWN0LWFkZGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNWIyMWI2O1xuICAgIHBhZGRpbmc6IDAuNXJlbTtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZm9udC13ZWlnaHQ6IDU1MDtcbn1cblxuLnRvZG8tYWRkZXIge1xuICAgIGdyaWQtY29sdW1uOiAxLzI7XG4gICAgZ3JpZC1yb3c6IDEvMjtcbiAgICBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuZm9ybS50b2RvLWZvcm0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBnYXA6IDFyZW07XG59XG5cbmZvcm0udG9kby1mb3JtID4gZGl2IHsgLypzZWxlY3QgYWxsIGRpdnMgdW5kZXIgdGhlIGZvcm0qL1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBnYXA6IDAuMnJlbTtcbn1cblxuLnRvZG8tZm9ybSAucmFkaW8tb3B0aW9uIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGdhcDogMC40cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbi50b2RvLWZvcm0gaW5wdXRbdHlwZT1cInRleHRcIl0sIHRleHRhcmVhLCBpbnB1dFt0eXBlPVwiZGF0ZVwiXSwgc2VsZWN0IHtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIHBhZGRpbmc6IDAuMnJlbTtcbn1cblxuZm9ybSBidXR0b24ge1xuICAgIGJvcmRlci1yYWRpdXM6IDFyZW07XG4gICAgYm9yZGVyOiBzb2xpZCB3aGl0ZSAwLjFyZW07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzViMjFiNjtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgcGFkZGluZzogMC4xcmVtO1xufVxuXG4uZm9ybS10aXRsZSB7XG4gICAgZm9udC1zaXplOiAxLjJyZW07XG59XG5cbi5wcm9qZWN0LWFkZGVyIHtcbiAgICBncmlkLWNvbHVtbjogMS8yO1xuICAgIGdyaWQtcm93OiAyLzM7XG59XG5cbiNwcm9qZWN0LWNvbnRhaW5lciB7XG4gICAgZ3JpZC1jb2x1bW46IDIvMztcbiAgICBncmlkLXJvdzogMS8zO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBnYXA6IDFyZW07IC8qbWlnaHQgd2FudCB0byByZW1vdmUgbGF0ZXIqL1xuICAgIHBhZGRpbmc6IDAuNXJlbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGRkNmZlO1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIFxufVxuLnByb2plY3Qge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlZGU5ZmU7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBwYWRkaW5nOiAxcmVtO1xuXG59XG5cbi5wcm9qZWN0LXRpdGxlIHtcbiAgICBmb250LXNpemU6IDEuMnJlbTtcbiAgICBmb250LXdlaWdodDogNjAwO1xufVxuXG4uZmEtc29saWQuZmEtdHJhc2gucHJvamVjdC1kZWxldGUge1xuICAgIG1hcmdpbi1sZWZ0OiAwLjVyZW07XG59XG5cbi50b2RvLWNhcmQtY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBzdGFydDtcbiAgICBnYXA6IDFyZW07XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgcGFkZGluZzogMXJlbTtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG5cbn1cblxuLnRvZG8tY2FyZCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgcGFkZGluZzogMXJlbTtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIGhlaWdodDogMTVyZW07XG4gICAgbWF4LXdpZHRoOiAxNXJlbTtcbiAgICBtaW4td2lkdGg6IDE1cmVtO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBmb250LXNpemU6IDAuOHJlbTtcbiAgICBnYXA6IDAuMXJlbTtcbn1cblxuLmZhLXNvbGlkLmZhLXRyYXNoLnRvZG8tZGVsZXRlIHtcbiAgICBtYXJnaW4tdG9wOiBhdXRvO1xuICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xuICAgIGZvbnQtc2l6ZTogMS4xcmVtO1xuICAgIHBhZGRpbmctdG9wOiAwLjVyZW07XG59XG5cbi50b2RvLWNhcmQtdGl0bGUge1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgZm9udC1zaXplOiAxcmVtO1xufVxuXG4udG9kby1kZXNjcmlwdGlvbi10aXRsZSB7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cblxuLnRvZG8tZGVzY3JpcHRpb24ge1xuICAgIG92ZXJmbG93OiBhdXRvO1xufVxuXG4udG9kby1jYXJkLWRhdGUsIC5jYXJkLXByaW9yaXR5IHtcbiAgICBjb2xvcjogZ3JleTtcbn1cblxuXG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxTQUFTO0lBQ1QsVUFBVTtJQUNWLGtDQUFrQztJQUNsQyxlQUFlO0FBQ25COzs7QUFHQTtJQUNJLGFBQWE7SUFDYixTQUFTO0lBQ1Qsc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLCtDQUErQztJQUMvQyw0QkFBNEI7SUFDNUIsWUFBWTs7QUFFaEI7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsZUFBZTtJQUNmLFlBQVk7SUFDWixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsYUFBYTs7SUFFYixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsU0FBUztBQUNiOztBQUVBLHVCQUF1QixpQ0FBaUM7SUFDcEQsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsV0FBVztJQUNYLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osZUFBZTtBQUNuQjs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQiwwQkFBMEI7SUFDMUIseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixlQUFlO0FBQ25COztBQUVBO0lBQ0ksaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsU0FBUyxFQUFFLDZCQUE2QjtJQUN4QyxlQUFlO0lBQ2YseUJBQXlCO0lBQ3pCLGNBQWM7O0FBRWxCO0FBQ0E7SUFDSSx5QkFBeUI7SUFDekIsbUJBQW1CO0lBQ25CLGFBQWE7O0FBRWpCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsc0JBQXNCO0lBQ3RCLFNBQVM7SUFDVCxjQUFjO0lBQ2QsYUFBYTtJQUNiLGVBQWU7O0FBRW5COztBQUVBO0lBQ0ksdUJBQXVCO0lBQ3ZCLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsY0FBYztJQUNkLGFBQWE7SUFDYixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsaUJBQWlCO0lBQ2pCLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixvQkFBb0I7SUFDcEIsaUJBQWlCO0lBQ2pCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksY0FBYztBQUNsQjs7QUFFQTtJQUNJLFdBQVc7QUFDZlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCI6cm9vdCB7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgcGFkZGluZzogMDtcXG4gICAgZm9udC1mYW1pbHk6IFxcXCJQb3BwaW5zXFxcIiwgc2Fucy1zZXJpZjtcXG4gICAgZm9udC1zaXplOiAxNnB4O1xcbn1cXG5cXG5cXG5ib2R5IHtcXG4gICAgaGVpZ2h0OiAxMDB2aDtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG5cXG4uY29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBtaW5tYXgoMTUwcHgsIDI1MHB4KSAzZnI7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIGF1dG87XFxuICAgIGhlaWdodDogMTAwJTtcXG5cXG59XFxuXFxuLnRvZG8tYWRkZXIsIC5wcm9qZWN0LWFkZGVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzViMjFiNjtcXG4gICAgcGFkZGluZzogMC41cmVtO1xcbiAgICBjb2xvcjogd2hpdGU7XFxuICAgIGZvbnQtd2VpZ2h0OiA1NTA7XFxufVxcblxcbi50b2RvLWFkZGVyIHtcXG4gICAgZ3JpZC1jb2x1bW46IDEvMjtcXG4gICAgZ3JpZC1yb3c6IDEvMjtcXG4gICAgXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbmZvcm0udG9kby1mb3JtIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAxcmVtO1xcbn1cXG5cXG5mb3JtLnRvZG8tZm9ybSA+IGRpdiB7IC8qc2VsZWN0IGFsbCBkaXZzIHVuZGVyIHRoZSBmb3JtKi9cXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAwLjJyZW07XFxufVxcblxcbi50b2RvLWZvcm0gLnJhZGlvLW9wdGlvbiB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGdhcDogMC40cmVtO1xcbiAgICBmb250LXdlaWdodDogNTAwO1xcbn1cXG5cXG4udG9kby1mb3JtIGlucHV0W3R5cGU9XFxcInRleHRcXFwiXSwgdGV4dGFyZWEsIGlucHV0W3R5cGU9XFxcImRhdGVcXFwiXSwgc2VsZWN0IHtcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIHBhZGRpbmc6IDAuMnJlbTtcXG59XFxuXFxuZm9ybSBidXR0b24ge1xcbiAgICBib3JkZXItcmFkaXVzOiAxcmVtO1xcbiAgICBib3JkZXI6IHNvbGlkIHdoaXRlIDAuMXJlbTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzViMjFiNjtcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICBwYWRkaW5nOiAwLjFyZW07XFxufVxcblxcbi5mb3JtLXRpdGxlIHtcXG4gICAgZm9udC1zaXplOiAxLjJyZW07XFxufVxcblxcbi5wcm9qZWN0LWFkZGVyIHtcXG4gICAgZ3JpZC1jb2x1bW46IDEvMjtcXG4gICAgZ3JpZC1yb3c6IDIvMztcXG59XFxuXFxuI3Byb2plY3QtY29udGFpbmVyIHtcXG4gICAgZ3JpZC1jb2x1bW46IDIvMztcXG4gICAgZ3JpZC1yb3c6IDEvMztcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAxcmVtOyAvKm1pZ2h0IHdhbnQgdG8gcmVtb3ZlIGxhdGVyKi9cXG4gICAgcGFkZGluZzogMC41cmVtO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGRkNmZlO1xcbiAgICBvdmVyZmxvdzogYXV0bztcXG4gICAgXFxufVxcbi5wcm9qZWN0IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VkZTlmZTtcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gICAgcGFkZGluZzogMXJlbTtcXG5cXG59XFxuXFxuLnByb2plY3QtdGl0bGUge1xcbiAgICBmb250LXNpemU6IDEuMnJlbTtcXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcXG59XFxuXFxuLmZhLXNvbGlkLmZhLXRyYXNoLnByb2plY3QtZGVsZXRlIHtcXG4gICAgbWFyZ2luLWxlZnQ6IDAuNXJlbTtcXG59XFxuXFxuLnRvZG8tY2FyZC1jb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHN0YXJ0O1xcbiAgICBnYXA6IDFyZW07XFxuICAgIG92ZXJmbG93OiBhdXRvO1xcbiAgICBwYWRkaW5nOiAxcmVtO1xcbiAgICBmbGV4LXdyYXA6IHdyYXA7XFxuXFxufVxcblxcbi50b2RvLWNhcmQge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gICAgcGFkZGluZzogMXJlbTtcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gICAgb3ZlcmZsb3c6IGF1dG87XFxuICAgIGhlaWdodDogMTVyZW07XFxuICAgIG1heC13aWR0aDogMTVyZW07XFxuICAgIG1pbi13aWR0aDogMTVyZW07XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGZvbnQtc2l6ZTogMC44cmVtO1xcbiAgICBnYXA6IDAuMXJlbTtcXG59XFxuXFxuLmZhLXNvbGlkLmZhLXRyYXNoLnRvZG8tZGVsZXRlIHtcXG4gICAgbWFyZ2luLXRvcDogYXV0bztcXG4gICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XFxuICAgIGZvbnQtc2l6ZTogMS4xcmVtO1xcbiAgICBwYWRkaW5nLXRvcDogMC41cmVtO1xcbn1cXG5cXG4udG9kby1jYXJkLXRpdGxlIHtcXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcXG4gICAgZm9udC1zaXplOiAxcmVtO1xcbn1cXG5cXG4udG9kby1kZXNjcmlwdGlvbi10aXRsZSB7XFxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XFxufVxcblxcbi50b2RvLWRlc2NyaXB0aW9uIHtcXG4gICAgb3ZlcmZsb3c6IGF1dG87XFxufVxcblxcbi50b2RvLWNhcmQtZGF0ZSwgLmNhcmQtcHJpb3JpdHkge1xcbiAgICBjb2xvcjogZ3JleTtcXG59XFxuXFxuXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcblxuICAgIC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcbm9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQcm9qZWN0IHtcbiAgICB0aXRsZTsvL1N0cmluZyBcbiAgICB0b2RvTGlzdDsgLy9hcnJheSBvZiBUb2RvIG9iamVjdHNcblxuICAgIGNvbnN0cnVjdG9yKHRpdGxlKSB7XG4gICAgICAgIHRoaXMudGl0bGUgPSB0aXRsZTsgLy9zZXRzIHRpdGxlIG9mIHByb2plY3QgXG4gICAgICAgIHRoaXMudG9kb0xpc3QgPSBbXTsgLy9pbml0YWxpemUgYXMgZW1wdHkgYXJyYXlcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiAgQWRkcyB0b2RvIG9iamVjdCB0byB0aGUgaW5zdGFuY2UncyB0b2RvTGlzdCBhcnJheVxuICAgICAqIEBwYXJhbSB7QSBUb2RvIG9iamVjdH0gdG9kb09iamVjdCBcbiAgICAgKi9cbiAgICBhZGRUb2RvKHRvZG9PYmplY3QpIHtcbiAgICAgICAgdGhpcy50b2RvTGlzdC5wdXNoKHRvZG9PYmplY3QpOyBcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBkZWxldGVzIGEgdG9kbyBvYmplY3QgaW4gdGhlIGluc3RhbmNlJ3MgdG9kb2xpc3QgZ2l2ZW4gYW4gaW5kZXhcbiAgICAgKiBAcGFyYW0ge2ludGVnZXIgbnVtYmVyID4gLTEgYW5kIDwgdG9kb0xpc3QubGVuZ3RofSBpbmRleCBcbiAgICAgKi9cblxuICAgIGRlbGV0ZVRvZG8oaW5kZXgpIHtcbiAgICAgICAgdGhpcy50b2RvTGlzdC5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiByZXR1cm5zIGEgdG9kbyBvYmplY3QgZnJvbSB0aGUgaW5zdGFuY2UncyB0b2RvbGlzdCBnaXZlbiBhbiBpbmRleFxuICAgICAqIEBwYXJhbSB7aW50ZWdlciBudW1iZXIgPiAtMSBhbmQgPCB0b2RvTGlzdC5sZW5ndGh9IGluZGV4IFxuICAgICAqL1xuICAgIGdldFRvZG8oaW5kZXgpe1xuICAgICAgICByZXR1cm4gdGhpcy50b2RvTGlzdFtpbmRleF07XG4gICAgfVxuXG4gICAgZ2V0TnVtYmVyT2ZUb2RvcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudG9kb0xpc3QubGVuZ3RoO1xuICAgIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQcm9qZWN0TWFuYWdlciB7XG5cbiAgICBwcm9qZWN0TGlzdDsgLy9hcnJheSB0aGF0IGNvbnRhaW5zIG9ubHkgcHJvamVjdCBvYmplY3RzXG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5wcm9qZWN0TGlzdCA9IFtdOyAvL2luc3RhbnRpYXRlIGFuIGVtcHR5IGFycmF5XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFxuICAgICAqIEBwYXJhbSB7YW4gaW5zdGFuY2Ugb2YgcHJvamVjdH0gcHJvamVjdCBcbiAgICAgKi9cbiAgICBhZGRQcm9qZWN0KHByb2plY3QpIHtcbiAgICAgICAgdGhpcy5wcm9qZWN0TGlzdC5wdXNoKHByb2plY3QpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBkZWxldGVzIGEgcHJvamVjdCBnaXZlbiBhbiBpbmRleFxuICAgICAqIEBwYXJhbSB7aW50ZWdlciBudW1iZXIgPiAtMSBhbmQgPCBwcm9qZWN0TGlzdC5sZW5ndGh9IGluZGV4IFxuICAgICAqL1xuICAgIGRlbGV0ZVByb2plY3QoaW5kZXgpIHtcbiAgICAgICAgdGhpcy5wcm9qZWN0TGlzdC5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiAgcmV0dXJucyBhIHByb2plY3Qgb2JqZWN0IGdpdmVuIGFuIGluZGV4XG4gICAgICogQHBhcmFtIHtpbnRlZ2VyIG51bWJlciA+IC0xIGFuZCA8IHByb2plY3RMaXN0Lmxlbmd0aH0gaW5kZXggXG4gICAgICogQHJldHVybnMgXG4gICAgICovXG4gICAgZ2V0UHJvamVjdChpbmRleCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm9qZWN0TGlzdFtpbmRleF07XG4gICAgfVxuXG4gICAgZ2V0TnVtYmVyT2ZQcm9qZWN0cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvamVjdExpc3QubGVuZ3RoO1xuICAgIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBUb2RvIHtcblxuICAgIHRpdGxlOyAgLy9zdHJpbmdcbiAgICBkZXNjcmlwdGlvbjsgLy9zdHJpbmdcbiAgICBkdWVEYXRlOyAvL3N0cmluZyBmb3JtYXQgZGF0ZVxuICAgIHByaW9yaXR5OyAvL3N0cmluZywgY2FuIG9ubHkgYmUgaGlnaCwgbWVkaXVtLCBsb3cgb3IgbnVsbFxuXG4gICAgLyoqXG4gICAgICogXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHRpdGxlIC0gdGhlIHRpdGxlIG9mIHRoZSB0b2RvIG9iamVjdFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBkZXNjcmlwdGlvbiAtIGRlc2NyaXB0aW9uIG9mIHRoZSB0b2RvIG9iamVjdFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBkdWVEYXRlIC0gc3RyaW5nIHJlcGVyc2VudGF0aW9uIG9mIGEgZGF0ZSwgbXVzdCBiZSBpbiBmb3JtYXQgWVlZWS1NTS1ERFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwcmlvcml0eSAtIHN0cmluZyB2YWx1ZSB0aGF0IGNhbiBvbmx5IGJlIGxvdywgbWVkaXVtLCBoaWdoIFxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHRpdGxlLCBkZXNjcmlwdGlvbiwgZHVlRGF0ZSwgcHJpb3JpdHkpIHtcbiAgICAgICAgdGhpcy50aXRsZSA9IHRpdGxlO1xuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247IFxuICAgICAgICAvKmNvbnN0IGRhdGUgPSBuZXcgRGF0ZSgpOyAoYSB3YXkgdG8gZW5mb3JjZSBZWVlZLU1NLUREIGZvcm1hdClcbiAgICAgICAgY29uc3QgZGF0ZVN0cmluZyA9IGRhdGUudG9JU09TdHJpbmcoKS5zbGljZSgwLCAxMCk7ICovXG4gICAgICAgIHRoaXMuZHVlRGF0ZSA9IGR1ZURhdGU7IC8vXG4gICAgICAgIHRoaXMucHJpb3JpdHkgPSBwcmlvcml0eTtcbiAgICB9XG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiBgVGl0bGU6ICR7dGhpcy50aXRsZX0sIERlc2NyaXB0aW9uOiAke3RoaXMuZGVzY3JpcHRpb259LCBEdWUgZGF0ZTogJHt0aGlzLmR1ZURhdGV9LCBQcmlvcml0eTogJHt0aGlzLnByaW9yaXR5fWBcbiAgICB9XG5cbiAgICAvL3NldHRlcnMgYW5kIGdldHRlcnMgbm90IG5lZWRlZCwgYWNjZXNzIHRoZSB2YXJpYWJsZXMgZGlyZWN0bHlcblxufSIsImltcG9ydCAnLi9zdHlsZS5jc3MnXG5pbXBvcnQgQ29udHJvbGxlciBmcm9tICcuL2NvbnRyb2xsZXInO1xuXG5sZXQgYUNvbnRyb2xsZXIgPSBuZXcgQ29udHJvbGxlcigpO1xuYUNvbnRyb2xsZXIuc2V0QWRkUHJvamVjdEJ1dHRpb24oKTtcbmFDb250cm9sbGVyLnNldEFkZFRvZG9CdXR0b24oKTsiLCJpbXBvcnQgUHJvamVjdCBmcm9tIFwiLi9wcm9qZWN0XCI7XG5pbXBvcnQgUHJvamVjdE1hbmFnZXIgZnJvbSBcIi4vcHJvamVjdG1hbmFnZXJcIjtcbmltcG9ydCB7IGNyZWF0ZVByb2plY3RJbnRlcmZhY2UgfSBmcm9tIFwiLi91c2VyaW50ZXJmYWNlXCI7XG5pbXBvcnQgVG9kbyBmcm9tIFwiLi90b2RvXCI7XG5pbXBvcnQgeyBjcmVhdGVUb2RvSW50ZXJmYWNlIH0gZnJvbSBcIi4vdXNlcmludGVyZmFjZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb250cm9sbGVyIHtcblxuICAgICAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgICAgIHRoaXMucHJvamVjdE1hbmFnZXIgPSBuZXcgUHJvamVjdE1hbmFnZXIoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTZXRzIHVwIHRoZSBhZGQgcHJvamVjdCBidXR0b25cbiAgICAgICAgICovXG4gICAgICAgIHNldEFkZFByb2plY3RCdXR0aW9uKCkge1xuICAgICAgICAgICAgbGV0IGFkZFByb2plY3RGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9qZWN0LWZvcm1cIik7XG4gICAgICAgICAgICBsZXQgcHJvamVjdFRpdGxlSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2plY3QtZm9ybS10aXRsZVwiKTtcblxuICAgICAgICAgICAgYWRkUHJvamVjdEZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBsZXQgbmV3UHJvamVjdCA9IG5ldyBQcm9qZWN0KHByb2plY3RUaXRsZUlucHV0LnZhbHVlKTtcbiAgICAgICAgICAgICAgICBjcmVhdGVQcm9qZWN0SW50ZXJmYWNlKG5ld1Byb2plY3QsIHRoaXMucHJvamVjdE1hbmFnZXIpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgICAvKipcbiAgICAgICAgICogU2V0cyB1cCB0aGUgYWRkIHRvZG8gYnV0dG9uIFxuICAgICAgICAgKi9cbiAgICAgICAgc2V0QWRkVG9kb0J1dHRvbigpIHtcbiAgICAgICAgICAgIGxldCBhZGRUb2RvRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudG9kby1mb3JtXCIpO1xuICAgICAgICAgICAgbGV0IHRvZG9UaXRsZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN0b2RvLWZvcm0tdGl0bGVcIik7XG4gICAgICAgICAgICBsZXQgdG9kb0Rlc2NJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjdG9kby1mb3JtLWRlc2NyaXB0aW9uXCIpO1xuICAgICAgICAgICAgbGV0IHRvZG9EYXRlSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3RvZG8tZm9ybS1kdWUtZGF0ZVwiKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBhZGRUb2RvRm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChlKSA9PiB7XG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIGxldCBzZWxlY3RlZENhdGVnb3J5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9qZWN0cyBvcHRpb246Y2hlY2tlZFwiKTtcbiAgICAgICAgICAgICAgICBsZXQgcHJvamVjdEluZGV4ID0gTnVtYmVyKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvamVjdHMgb3B0aW9uOmNoZWNrZWRcIikuZ2V0QXR0cmlidXRlKFwiZGF0YS1pbmRleFwiKSk7XG4gICAgICAgICAgICAgICAgbGV0IHRvZG9Qcmlvcml0eVJhZGlvQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgaW5wdXRbdHlwZT1cInJhZGlvXCJdOmNoZWNrZWRgKTtcbiAgICAgICAgICAgICAgICBsZXQgbmV3VG9kbyA9IG5ldyBUb2RvKHRvZG9UaXRsZUlucHV0LnZhbHVlLCB0b2RvRGVzY0lucHV0LnZhbHVlLCB0b2RvRGF0ZUlucHV0LnZhbHVlLnJlcGxhY2UoLy0vZyxcIi9cIiksIHRvZG9Qcmlvcml0eVJhZGlvQnV0dG9uLnZhbHVlKTtcbiAgICAgICAgICAgICAgICBjcmVhdGVUb2RvSW50ZXJmYWNlKG5ld1RvZG8sIHByb2plY3RJbmRleCwgdGhpcy5wcm9qZWN0TWFuYWdlcilcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbn1cblxuXG4iLCJcbi8qKlxuICogQ3JlYXRlcyBhIHByb2plY3QgaW50ZXJmYWNlIGdpdmVuIGEgcHJvamVjdCBvYmplY3QgYW5kIGluc2VydHMgaW50byBhIGdpdmVuIFByb2plY3RNYW5hZ2VyIG9iamVjdFxuICogQHBhcmFtIHthIFByb2plY3Qgb2JqZWN0fSBwcm9qZWN0T2JqIFxuICogQHBhcmFtIHtwcm9qZWN0TWFuYWdlcn0gdGhlIFByb2plY3RNYW5hZ2VyIG9iamVjdCBkZXBlbmRlbmN5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQcm9qZWN0SW50ZXJmYWNlKHByb2plY3RPYmosIHByb2plY3RNYW5hZ2VyKSB7XG4gICAgcHJvamVjdE1hbmFnZXIuYWRkUHJvamVjdChwcm9qZWN0T2JqKTsgXG4gICAgY3JlYXRlUHJvamVjdE9wdGlvbihwcm9qZWN0T2JqLCBwcm9qZWN0TWFuYWdlci5nZXROdW1iZXJPZlByb2plY3RzKCkgLSAxKVxuICAgIGxldCBwcm9qZWN0Q29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9qZWN0LWNvbnRhaW5lclwiKTsgXG4gICAgbGV0IHByb2plY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIHByb2plY3QuY2xhc3NMaXN0LmFkZChcInByb2plY3RcIik7XG4gICAgcHJvamVjdC5zZXRBdHRyaWJ1dGUoXCJkYXRhLWluZGV4XCIsIHByb2plY3RNYW5hZ2VyLmdldE51bWJlck9mUHJvamVjdHMoKSAtIDEpO1xuICAgIGxldCBwcm9qZWN0VGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIHByb2plY3RUaXRsZS5jbGFzc0xpc3QuYWRkKFwicHJvamVjdC10aXRsZVwiKTtcbiAgICBwcm9qZWN0VGl0bGUudGV4dENvbnRlbnQgPSBwcm9qZWN0T2JqLnRpdGxlO1xuICAgIGxldCBkZWxldGVJY29uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlcIik7XG4gICAgZGVsZXRlSWNvbi5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2ZhLXNvbGlkIGZhLXRyYXNoIHByb2plY3QtZGVsZXRlJyk7XG4gICAgbGV0IGNhcmRDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGNhcmRDb250YWluZXIuY2xhc3NMaXN0LmFkZChcInRvZG8tY2FyZC1jb250YWluZXJcIik7XG5cbiAgICAgZGVsZXRlSWNvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHsgLy9EZWxldGUgZmVhdHVyZVxuICAgICAgICBwcm9qZWN0LnJlbW92ZSgpOyAvL3JlbW92ZSB0aGUgcHJvamVjdCBmcm9tIHRoZSBkb20gXG4gICAgICAgIHByb2plY3RNYW5hZ2VyLmRlbGV0ZVByb2plY3QoTnVtYmVyKHByb2plY3QuZ2V0QXR0cmlidXRlKFwiZGF0YS1pbmRleFwiKSkpO1xuICAgICAgICBkZWxldGVQcm9qZWN0T3B0aW9uKHByb2plY3QuZ2V0QXR0cmlidXRlKFwiZGF0YS1pbmRleFwiKSk7XG4gICAgICAgIHVwZGF0ZVByb2plY3RJbmRpY2VzKCk7IC8vdXBkYXRlIHRoZSBpbmRleGVzXG4gICAgfSk7XG5cbiAgICBwcm9qZWN0VGl0bGUuYXBwZW5kQ2hpbGQoZGVsZXRlSWNvbik7XG4gICAgcHJvamVjdC5hcHBlbmRDaGlsZChwcm9qZWN0VGl0bGUpO1xuICAgIHByb2plY3QuYXBwZW5kQ2hpbGQoY2FyZENvbnRhaW5lcik7XG4gICAgcHJvamVjdENvbnRhaW5lci5hcHBlbmRDaGlsZChwcm9qZWN0KTtcbn07XG5cbi8qKlxuICogSGVscGVyIGZ1bmN0aW9uOiBVcGRhdGUgdGhlIGRhdGEtaW5kZXggb2YgZWFjaCBwcm9qZWN0IGRvbSBlbGVtZW50IGFuZCBvcHRpb24gZWxlbWVudCBmcm9tIDAgdG8gIyBvZiBwcm9qZWN0cyAtIDFcbiAqL1xuZnVuY3Rpb24gdXBkYXRlUHJvamVjdEluZGljZXMoKSB7XG4gICAgbGV0IHByb2plY3RMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5wcm9qZWN0XCIpO1xuICAgIGxldCBwcm9qZWN0T3B0aW9uTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJvcHRpb25cIik7XG4gICAgZm9yKGxldCBpID0gMDsgaSA8IHByb2plY3RMaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHByb2plY3RMaXN0W2ldLnNldEF0dHJpYnV0ZShcImRhdGEtaW5kZXhcIiwgaSk7XG4gICAgICAgIHByb2plY3RPcHRpb25MaXN0W2ldLnNldEF0dHJpYnV0ZShcImRhdGEtaW5kZXhcIiwgaSk7XG4gICAgfVxufTtcbi8qKlxuICogSGVscGVyIGZ1bmN0aW9uIHdoaWNoIGNyZWF0ZXMgYW4gb3B0aW9uIGRvbSBlbGVtZW50IGZyb20gYSBwcm9qZWN0IG9ialxuICogQHBhcmFtIHsqfSBwcm9qZWN0T2JqIFxuICogQHBhcmFtIHsqfSBwcm9qZWN0TWFuYWdlciBcbiAqL1xuZnVuY3Rpb24gY3JlYXRlUHJvamVjdE9wdGlvbihwcm9qZWN0T2JqLCBkYXRhaW5kZXgpIHtcbiAgICBsZXQgcHJvamVjdFNlbGVjdG9yID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9qZWN0c1wiKTtcbiAgICBsZXQgbmV3T3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcbiAgICBuZXdPcHRpb24uc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgcHJvamVjdE9iai50aXRsZSlcbiAgICBuZXdPcHRpb24uc2V0QXR0cmlidXRlKFwiZGF0YS1pbmRleFwiLCBkYXRhaW5kZXgpO1xuICAgIG5ld09wdGlvbi50ZXh0Q29udGVudCA9IHByb2plY3RPYmoudGl0bGU7XG4gICAgcHJvamVjdFNlbGVjdG9yLmFwcGVuZENoaWxkKG5ld09wdGlvbik7XG59O1xuXG4vKipcbiAqIEhlbHBlciBmdW5jdGlvbiB0aGF0IGRlbGV0ZXMgYW4gb3B0aW9uIGRvbSBlbGVtZW50IGdpdmVuIGEgZGF0YWluZGV4XG4gKiBAcGFyYW0ge30gZGF0YWluZGV4XG4gKi9cbmZ1bmN0aW9uIGRlbGV0ZVByb2plY3RPcHRpb24oZGF0YWluZGV4KSB7XG4gICAgbGV0IG9wdGlvblRvRGVsZXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihgb3B0aW9uW2RhdGEtaW5kZXg9XCIke2RhdGFpbmRleH1cIl1gKTtcbiAgICBvcHRpb25Ub0RlbGV0ZS5yZW1vdmUoKTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVUb2RvSW50ZXJmYWNlKHRvZG9PYmosIHByb2plY3RJbmRleCwgcHJvamVjdE1hbmFnZXIpIHtcbiAgICBwcm9qZWN0TWFuYWdlci5nZXRQcm9qZWN0KHByb2plY3RJbmRleCkuYWRkVG9kbyh0b2RvT2JqKTsgLy9hZGQgdG8gdGhlIGFwcHJvcHJpYXRlIHByb2plY3RcblxuICAgIGxldCB0b2RvQ2FyZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgdG9kb0NhcmQuY2xhc3NMaXN0LmFkZChcInRvZG8tY2FyZFwiKTtcbiAgICB0b2RvQ2FyZC5zZXRBdHRyaWJ1dGUoXCJkYXRhLWluZGV4XCIsIHByb2plY3RNYW5hZ2VyLmdldFByb2plY3QocHJvamVjdEluZGV4KS5nZXROdW1iZXJPZlRvZG9zKCkgLSAxKVxuXG4gICAgbGV0IGNhcmRUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgY2FyZFRpdGxlLmNsYXNzTGlzdC5hZGQoXCJ0b2RvLWNhcmQtdGl0bGVcIik7XG4gICAgY2FyZFRpdGxlLnRleHRDb250ZW50ID0gdG9kb09iai50aXRsZTtcbiAgICBcbiAgICBsZXQgY2FyZERhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGNhcmREYXRlLmNsYXNzTGlzdC5hZGQoXCJ0b2RvLWNhcmQtZGF0ZVwiKTtcbiAgICBjYXJkRGF0ZS50ZXh0Q29udGVudCA9IHRvZG9PYmouZHVlRGF0ZTtcblxuICAgIGxldCBjYXJkUHJpb3JpdHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGNhcmRQcmlvcml0eS5jbGFzc0xpc3QuYWRkKFwiY2FyZC1wcmlvcml0eVwiKTtcbiAgICBjYXJkUHJpb3JpdHkudGV4dENvbnRlbnQgPSBgUHJpb3JpdHk6ICR7dG9kb09iai5wcmlvcml0eX1gXG5cbiAgICBsZXQgY2FyZERlc2NUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgY2FyZERlc2NUaXRsZS5jbGFzc0xpc3QuYWRkKFwidG9kby1kZXNjcmlwdGlvbi10aXRsZVwiKTtcbiAgICBjYXJkRGVzY1RpdGxlLnRleHRDb250ZW50ID0gXCJEZXNjcmlwdGlvblwiO1xuXG4gICAgbGV0IGNhcmREZXNjID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBjYXJkRGVzYy5jbGFzc0xpc3QuYWRkKFwidG9kby1kZXNjcmlwdGlvblwiKTtcbiAgICBjYXJkRGVzYy50ZXh0Q29udGVudCA9IHRvZG9PYmouZGVzY3JpcHRpb247XG5cbiAgICBsZXQgZGVsZXRlSWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpXCIpO1xuICAgIGRlbGV0ZUljb24uc2V0QXR0cmlidXRlKCdjbGFzcycsICdmYS1zb2xpZCBmYS10cmFzaCB0b2RvLWRlbGV0ZScpO1xuXG4gICAgZGVsZXRlSWNvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgbGV0IHByb2plY3QgPSB0b2RvQ2FyZC5jbG9zZXN0KFwiLnByb2plY3RcIikgLy9nZXQgaXRzIHByb2plY3QgZG9tIGVsZW1lbnRcbiAgICAgICAgdG9kb0NhcmQucmVtb3ZlKCk7IC8vcmVtb3ZlIHRoZSBjYXJkIGZyb20gdGhlIGRvbVxuICAgICAgICAvL2RlbGV0ZSB0aGUgdG9kbyBmcm9tIHRoZSBjb3JyZXNwb25kaW5nIHByb2plY3Qgb2JqZWN0IHJlcC5cbiAgICAgICAgcHJvamVjdE1hbmFnZXIuZ2V0UHJvamVjdChOdW1iZXIocHJvamVjdC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWluZGV4XCIpKSkuZGVsZXRlVG9kbyhOdW1iZXIodG9kb0NhcmQuZ2V0QXR0cmlidXRlKFwiZGF0YS1pbmRleFwiKSkpO1xuICAgICAgICB1cGRhdGVUb2RvSW5kaWNlcyhOdW1iZXIocHJvamVjdC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWluZGV4XCIpKSk7XG5cbiAgICB9KVxuXG4gICAgbGV0IHRvZG9Db250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAucHJvamVjdFtkYXRhLWluZGV4PVwiJHtwcm9qZWN0SW5kZXh9XCJdIC50b2RvLWNhcmQtY29udGFpbmVyYCk7XG5cbiAgICB0b2RvQ2FyZC5hcHBlbmRDaGlsZChjYXJkVGl0bGUpO1xuICAgIHRvZG9DYXJkLmFwcGVuZENoaWxkKGNhcmREYXRlKTtcbiAgICB0b2RvQ2FyZC5hcHBlbmRDaGlsZChjYXJkUHJpb3JpdHkpO1xuICAgIHRvZG9DYXJkLmFwcGVuZENoaWxkKGNhcmREZXNjVGl0bGUpO1xuICAgIHRvZG9DYXJkLmFwcGVuZENoaWxkKGNhcmREZXNjKTtcbiAgICB0b2RvQ2FyZC5hcHBlbmRDaGlsZChkZWxldGVJY29uKTtcbiAgICB0b2RvQ29udGFpbmVyLmFwcGVuZENoaWxkKHRvZG9DYXJkKTtcbn1cblxuLyoqXG4gKiBVcGRhdGVzIHRoZSBkYXRhLWluZGV4IGF0dHJpYnV0ZXMgb2YgdG9kby1jYXJkcyB1bmRlciBhIHBhcnRpY3VsYXIgcHJvamVjdCBkb20gZWxlbWVudCBnaXZlbiBpdHMgZGF0YWluZGV4XG4gKiBAcGFyYW0geyp9IHByb2plY3RJbmRleCBcbiAqL1xuZnVuY3Rpb24gdXBkYXRlVG9kb0luZGljZXMocHJvamVjdEluZGV4KSB7XG4gICAgXG4gICAgbGV0IHRvZG9DYXJkcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYC5wcm9qZWN0W2RhdGEtaW5kZXg9XCIke3Byb2plY3RJbmRleH1cIl0gLnRvZG8tY2FyZGApO1xuICAgIGxldCBpID0gMDtcbiAgICB0b2RvQ2FyZHMuZm9yRWFjaCgoY2FyZCkgPT4ge1xuICAgICAgICBjYXJkLnNldEF0dHJpYnV0ZShcImRhdGEtaW5kZXhcIiwgaSk7XG4gICAgICAgIGkrKztcbiAgICB9KVxufSJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwibmMiLCJsb2NhbHMiLCJQcm9qZWN0IiwidGl0bGUiLCJ0b2RvTGlzdCIsImNvbnN0cnVjdG9yIiwiYWRkVG9kbyIsInRvZG9PYmplY3QiLCJkZWxldGVUb2RvIiwiZ2V0VG9kbyIsImdldE51bWJlck9mVG9kb3MiLCJQcm9qZWN0TWFuYWdlciIsInByb2plY3RMaXN0IiwiYWRkUHJvamVjdCIsInByb2plY3QiLCJkZWxldGVQcm9qZWN0IiwiZ2V0UHJvamVjdCIsImdldE51bWJlck9mUHJvamVjdHMiLCJUb2RvIiwiZGVzY3JpcHRpb24iLCJkdWVEYXRlIiwicHJpb3JpdHkiLCJhQ29udHJvbGxlciIsInByb2plY3RNYW5hZ2VyIiwic2V0QWRkUHJvamVjdEJ1dHRpb24iLCJhZGRQcm9qZWN0Rm9ybSIsInByb2plY3RUaXRsZUlucHV0IiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJwcm9qZWN0T2JqIiwiZGF0YWluZGV4IiwicHJvamVjdFNlbGVjdG9yIiwibmV3T3B0aW9uIiwidGV4dENvbnRlbnQiLCJjcmVhdGVQcm9qZWN0T3B0aW9uIiwicHJvamVjdENvbnRhaW5lciIsImNsYXNzTGlzdCIsImFkZCIsInByb2plY3RUaXRsZSIsImRlbGV0ZUljb24iLCJjYXJkQ29udGFpbmVyIiwiTnVtYmVyIiwiZ2V0QXR0cmlidXRlIiwicXVlcnlTZWxlY3RvckFsbCIsInByb2plY3RPcHRpb25MaXN0IiwidXBkYXRlUHJvamVjdEluZGljZXMiLCJjcmVhdGVQcm9qZWN0SW50ZXJmYWNlIiwidmFsdWUiLCJzZXRBZGRUb2RvQnV0dG9uIiwiYWRkVG9kb0Zvcm0iLCJ0b2RvVGl0bGVJbnB1dCIsInRvZG9EZXNjSW5wdXQiLCJ0b2RvRGF0ZUlucHV0IiwicHJvamVjdEluZGV4IiwidG9kb1ByaW9yaXR5UmFkaW9CdXR0b24iLCJ0b2RvT2JqIiwidG9kb0NhcmQiLCJjYXJkVGl0bGUiLCJjYXJkRGF0ZSIsImNhcmRQcmlvcml0eSIsImNhcmREZXNjVGl0bGUiLCJjYXJkRGVzYyIsImNsb3Nlc3QiLCJ0b2RvQ2FyZHMiLCJmb3JFYWNoIiwiY2FyZCIsInVwZGF0ZVRvZG9JbmRpY2VzIiwidG9kb0NvbnRhaW5lciIsImNyZWF0ZVRvZG9JbnRlcmZhY2UiLCJyZXBsYWNlIl0sInNvdXJjZVJvb3QiOiIifQ==